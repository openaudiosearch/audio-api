# PodcastIndex.org API
# # Authentication Details Sending an API request is easy. We use an Amazon-style request authorization token to secure each request.  Register for a free API key at https://api.podcastindex.org/  These headers parameters are required for each request: `User-Agent`, `X-Auth-Date`, `X-Auth-Key`, `Authorization`  See [Authentication](#auth) for description of parameters. 
# The version of the OpenAPI document: 1.4.0
# Contact: info@podcastindex.org
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# package openapi2graphql

# default_api

type mutation {
  # By Feed URL
  # This call adds a podcast to the index using its feed url. If a feed already exists, you will get its existing Feed ID returned.  **NOTE**: this endpoint requires an APIKey with the **write** permission.  Example: https://api.podcastindex.org/api/1.0/add/byfeedurl?url&#x3D;https://feeds.theincomparable.com/batmanuniversity&amp;pretty 
  # @param String! url Podcast feed URL 
  # @param Int! itunesid If this parameter is given, and the existing feed has no associated iTunes ID, it will be associated with this ID. If an existing iTunes ID is already associated with this feed it will **NOT** be changed. 
  # @param Boolean! pretty If present, makes the output “pretty” to help with debugging.  Parameter shall not have a value 
  # @return [InlineResponse20020]
  AddByfeedurlPost(url: String!, itunesid: Int!, pretty: Boolean!): InlineResponse20020

  # By iTunes ID
  # This call adds a podcast to the index using its iTunes ID. If a feed already exists, it will be noted in the response.  **NOTE**: this endpoint requires an APIKey with the **write** permission.  Example: https://api.podcastindex.org/api/1.0/add/byitunesid?id&#x3D;1441923632&amp;pretty 
  # @param Int! Id_ The iTunes ID to add 
  # @param Boolean! pretty If present, makes the output “pretty” to help with debugging.  Parameter shall not have a value 
  # @return [InlineResponse20021]
  AddByitunesidPost(Id_: Int!, pretty: Boolean!): InlineResponse20021

}

type query {
  # By Feed ID
  # This call returns all the episodes we know about for this feed from the PodcastIndex ID. Episodes are in reverse chronological order.  Examples:    - https://api.podcastindex.org/api/1.0/episodes/byfeedid?id&#x3D;75075&amp;pretty   - https://api.podcastindex.org/api/1.0/episodes/byfeedid?id&#x3D;41504,920666&amp;pretty   - Includes &#x60;persons&#x60;: https://api.podcastindex.org/api/1.0/episodes/byfeedid?id&#x3D;169991&amp;pretty 
  # @param String! Id_ The PodcastIndex Feed ID or IDs to search for.  If searching for multiple IDs, separate values with a comma. A maximum of 200 IDs can be provided. 
  # @param Int! since Return items since the specified time. The value can be a unix epoch timestamp or a negative integer that represents a number of seconds prior to right now. 
  # @param Int! max Maximum number of results to return. 
  # @param Boolean! fulltext If present, return the full text value of any text fields (ex: &#x60;description&#x60;). If not provided, field value is truncated to 100 words.  Parameter shall not have a value 
  # @param Boolean! pretty If present, makes the output “pretty” to help with debugging.  Parameter shall not have a value 
  # @return [InlineResponse2008]
  EpisodesByfeedid(Id_: String!, since: Int!, max: Int!, fulltext: Boolean!, pretty: Boolean!): InlineResponse2008

  # By Feed URL
  # This call returns all the episodes we know about for this feed from the feed URL. Episodes are in reverse chronological order.  Examples:    - https://api.podcastindex.org/api/1.0/episodes/byfeedurl?url&#x3D;https://feeds.theincomparable.com/batmanuniversity&amp;pretty   - Includes &#x60;persons&#x60;: https://api.podcastindex.org/api/1.0/episodes/byfeedurl?url&#x3D;https://engineered.network/pragmatic/feed/index.xml&amp;pretty 
  # @param String! url Podcast feed URL 
  # @param Int! since Return items since the specified time. The value can be a unix epoch timestamp or a negative integer that represents a number of seconds prior to right now. 
  # @param Int! max Maximum number of results to return. 
  # @param Boolean! fulltext If present, return the full text value of any text fields (ex: &#x60;description&#x60;). If not provided, field value is truncated to 100 words.  Parameter shall not have a value 
  # @param Boolean! pretty If present, makes the output “pretty” to help with debugging.  Parameter shall not have a value 
  # @return [InlineResponse2009]
  EpisodesByfeedurl(url: String!, since: Int!, max: Int!, fulltext: Boolean!, pretty: Boolean!): InlineResponse2009

  # By ID
  # Get all the metadata for a single episode by passing its id.  Example: https://api.podcastindex.org/api/1.0/episodes/byid?id&#x3D;16795090&amp;pretty 
  # @param Int! Id_ The PodcastIndex episode ID to search for. 
  # @param Boolean! fulltext If present, return the full text value of any text fields (ex: &#x60;description&#x60;). If not provided, field value is truncated to 100 words.  Parameter shall not have a value 
  # @param Boolean! pretty If present, makes the output “pretty” to help with debugging.  Parameter shall not have a value 
  # @return [InlineResponse20011]
  EpisodesByid(Id_: Int!, fulltext: Boolean!, pretty: Boolean!): InlineResponse20011

  # By iTunes ID
  # This call returns all the episodes we know about for this feed from the iTunes ID. Episodes are in reverse chronological order.  Example: https://api.podcastindex.org/api/1.0/episodes/byitunesid?id&#x3D;1441923632&amp;pretty 
  # @param Int! Id_ The iTunes Feed ID to search for 
  # @param Int! since Return items since the specified time. The value can be a unix epoch timestamp or a negative integer that represents a number of seconds prior to right now. 
  # @param Int! max Maximum number of results to return. 
  # @param Boolean! fulltext If present, return the full text value of any text fields (ex: &#x60;description&#x60;). If not provided, field value is truncated to 100 words.  Parameter shall not have a value 
  # @param Boolean! pretty If present, makes the output “pretty” to help with debugging.  Parameter shall not have a value 
  # @return [InlineResponse20010]
  EpisodesByitunesid(Id_: Int!, since: Int!, max: Int!, fulltext: Boolean!, pretty: Boolean!): InlineResponse20010

  # Random
  # This call returns a random batch of episodes, in no specific order.  Examples:    - https://api.podcastindex.org/api/1.0/episodes/random?notcat&#x3D;News,Religion&amp;lang&#x3D;en,es&amp;pretty   - https://api.podcastindex.org/api/1.0/episodes/random?max&#x3D;2&amp;pretty 
  # @param Int! max Maximum number of results to return. 
  # @param String! lang Specifying a language code (like \&quot;en\&quot;) will return only episodes having that specific language.  You can specify multiple languages by separating them with commas.  If you also want to return episodes that have no language given, use the token \&quot;unknown\&quot;. (ex. en,es,ja,unknown).  Values are not case sensitive. 
  # @param String! cat Use this argument to specify that you **ONLY** want episodes with these categories in the results.  Separate multiple categories with commas.  You may specify either the Category ID and/or the Category Name.  Values are not case sensitive.  The &#x60;cat&#x60; and &#x60;notcat&#x60; filters can be used together to fine tune a very specific result set.  Category numbers and names can be found in the [Podcast Namespace documentation](https://github.com/Podcastindex-org/podcast-namespace/blob/main/categories.json) 
  # @param String! notcat Use this argument to specify categories of episodes to **NOT** show in the results.  Separate multiple categories with commas.  You may specify either the Category ID and/or the Category Name.  Values are not case sensitive.  The &#x60;cat&#x60; and &#x60;notcat&#x60; filters can be used together to fine tune a very specific result set.  Category numbers and names can be found in the [Podcast Namespace documentation](https://github.com/Podcastindex-org/podcast-namespace/blob/main/categories.json) 
  # @param Boolean! fulltext If present, return the full text value of any text fields (ex: &#x60;description&#x60;). If not provided, field value is truncated to 100 words.  Parameter shall not have a value 
  # @param Boolean! pretty If present, makes the output “pretty” to help with debugging.  Parameter shall not have a value 
  # @return [InlineResponse20012]
  EpisodesRandom(max: Int!, lang: String!, cat: String!, notcat: String!, fulltext: Boolean!, pretty: Boolean!): InlineResponse20012

  # By Feed ID
  # This call returns everything we know about the feed from the PodcastIndex ID  Examples:    - https://api.podcastindex.org/api/1.0/podcasts/byfeedid?id&#x3D;75075&amp;pretty   - Includes &#x60;value&#x60; and &#x60;funding&#x60;: https://api.podcastindex.org/api/1.0/podcasts/byfeedid?id&#x3D;169991&amp;pretty 
  # @param Int! Id_ The PodcastIndex Feed ID to search for 
  # @param Boolean! pretty If present, makes the output “pretty” to help with debugging.  Parameter shall not have a value 
  # @return [InlineResponse2002]
  PodcastsByfeedid(Id_: Int!, pretty: Boolean!): InlineResponse2002

  # By Feed URL
  # This call returns everything we know about the feed from the feed URL  Examples:    - https://api.podcastindex.org/api/1.0/podcasts/byfeedurl?url&#x3D;https://feeds.theincomparable.com/batmanuniversity&amp;pretty   - Includes &#x60;value&#x60; and &#x60;funding&#x60;: https://api.podcastindex.org/api/1.0/podcasts/byfeedurl?url&#x3D;https://engineered.network/pragmatic/feed/index.xml&amp;pretty 
  # @param String! url Podcast feed URL 
  # @param Boolean! pretty If present, makes the output “pretty” to help with debugging.  Parameter shall not have a value 
  # @return [InlineResponse2003]
  PodcastsByfeedurl(url: String!, pretty: Boolean!): InlineResponse2003

  # By iTunes ID
  # This call returns everything we know about the feed from the iTunes ID  Example: https://api.podcastindex.org/api/1.0/podcasts/byitunesid?id&#x3D;1441923632&amp;pretty 
  # @param Int! Id_ The iTunes Feed ID to search for 
  # @param Boolean! pretty If present, makes the output “pretty” to help with debugging.  Parameter shall not have a value 
  # @return [InlineResponse2004]
  PodcastsByitunesid(Id_: Int!, pretty: Boolean!): InlineResponse2004

  # By Tag
  # This call returns all feeds that support the specified [podcast namespace](https://podcastindex.org/namespace/1.0) tag.  Example: https://api.podcastindex.org/api/1.0/podcasts/bytag?podcast-value&amp;pretty 
  # @param Boolean! podcastValue Get feeds supporting the &#x60;value&#x60; tag.  Parameter shall not have a value 
  # @param Boolean! pretty If present, makes the output “pretty” to help with debugging.  Parameter shall not have a value 
  # @return [InlineResponse2005]
  PodcastsBytag(podcastValue: Boolean!, pretty: Boolean!): InlineResponse2005

  # Dead
  # This call returns all feeds that have been marked dead (&#x60;dead&#x60; &#x3D;&#x3D; 1)  Example: https://api.podcastindex.org/api/1.0/podcasts/dead?pretty 
  # @param Boolean! pretty If present, makes the output “pretty” to help with debugging.  Parameter shall not have a value 
  # @return [InlineResponse2007]
  PodcastsDead(pretty: Boolean!): InlineResponse2007

  # Trending
  # This call returns the podcasts/feeds that in the index that are trending.  Example: https://api.podcastindex.org/api/1.0/podcasts/trending?pretty 
  # @param Int! max Maximum number of results to return. 
  # @param Int! since Return items since the specified time. The value can be a unix epoch timestamp or a negative integer that represents a number of seconds prior to right now. 
  # @param String! lang Specifying a language code (like \&quot;en\&quot;) will return only episodes having that specific language.  You can specify multiple languages by separating them with commas.  If you also want to return episodes that have no language given, use the token \&quot;unknown\&quot;. (ex. en,es,ja,unknown).  Values are not case sensitive. 
  # @param String! cat Use this argument to specify that you **ONLY** want episodes with these categories in the results.  Separate multiple categories with commas.  You may specify either the Category ID and/or the Category Name.  Values are not case sensitive.  The &#x60;cat&#x60; and &#x60;notcat&#x60; filters can be used together to fine tune a very specific result set.  Category numbers and names can be found in the [Podcast Namespace documentation](https://github.com/Podcastindex-org/podcast-namespace/blob/main/categories.json) 
  # @param String! notcat Use this argument to specify categories of episodes to **NOT** show in the results.  Separate multiple categories with commas.  You may specify either the Category ID and/or the Category Name.  Values are not case sensitive.  The &#x60;cat&#x60; and &#x60;notcat&#x60; filters can be used together to fine tune a very specific result set.  Category numbers and names can be found in the [Podcast Namespace documentation](https://github.com/Podcastindex-org/podcast-namespace/blob/main/categories.json) 
  # @param Boolean! pretty If present, makes the output “pretty” to help with debugging.  Parameter shall not have a value 
  # @return [InlineResponse2006]
  PodcastsTrending(max: Int!, since: Int!, lang: String!, cat: String!, notcat: String!, pretty: Boolean!): InlineResponse2006

  # Episodes
  # This call returns the most recent &#x60;max&#x60; number of episodes globally across the whole index, in reverse chronological order.  Example: https://api.podcastindex.org/api/1.0/recent/episodes?max&#x3D;7&amp;pretty 
  # @param Int! max Maximum number of results to return. 
  # @param String! excludeString Any item containing this string will be discarded from the result set.  This may, in certain cases, reduce your set size below your &#x60;max&#x60; value.  Matches against the &#x60;title&#x60; and URL properties. 
  # @param Int! before If you pass a PodcastIndex Episode ID, you will get recent episodes before that ID, allowing you to walk back through the episode history sequentially. 
  # @param Boolean! fulltext If present, return the full text value of any text fields (ex: &#x60;description&#x60;). If not provided, field value is truncated to 100 words.  Parameter shall not have a value 
  # @param Boolean! pretty If present, makes the output “pretty” to help with debugging.  Parameter shall not have a value 
  # @return [InlineResponse20013]
  RecentEpisodes(max: Int!, excludeString: String!, before: Int!, fulltext: Boolean!, pretty: Boolean!): InlineResponse20013

  # Feeds
  # This call returns the most recent &#x60;max&#x60; feeds, in reverse chronological order.  Examples:    - https://api.podcastindex.org/api/1.0/recent/feeds?pretty   - https://api.podcastindex.org/api/1.0/recent/feeds?max&#x3D;20&amp;cat&#x3D;102,health&amp;lang&#x3D;de,ja&amp;pretty 
  # @param Int! max Maximum number of results to return. 
  # @param Int! since Return items since the specified time. The value can be a unix epoch timestamp or a negative integer that represents a number of seconds prior to right now. 
  # @param String! lang Specifying a language code (like \&quot;en\&quot;) will return only episodes having that specific language.  You can specify multiple languages by separating them with commas.  If you also want to return episodes that have no language given, use the token \&quot;unknown\&quot;. (ex. en,es,ja,unknown).  Values are not case sensitive. 
  # @param String! cat Use this argument to specify that you **ONLY** want episodes with these categories in the results.  Separate multiple categories with commas.  You may specify either the Category ID and/or the Category Name.  Values are not case sensitive.  The &#x60;cat&#x60; and &#x60;notcat&#x60; filters can be used together to fine tune a very specific result set.  Category numbers and names can be found in the [Podcast Namespace documentation](https://github.com/Podcastindex-org/podcast-namespace/blob/main/categories.json) 
  # @param String! notcat Use this argument to specify categories of episodes to **NOT** show in the results.  Separate multiple categories with commas.  You may specify either the Category ID and/or the Category Name.  Values are not case sensitive.  The &#x60;cat&#x60; and &#x60;notcat&#x60; filters can be used together to fine tune a very specific result set.  Category numbers and names can be found in the [Podcast Namespace documentation](https://github.com/Podcastindex-org/podcast-namespace/blob/main/categories.json) 
  # @param Boolean! pretty If present, makes the output “pretty” to help with debugging.  Parameter shall not have a value 
  # @return [InlineResponse20014]
  RecentFeeds(max: Int!, since: Int!, lang: String!, cat: String!, notcat: String!, pretty: Boolean!): InlineResponse20014

  # New Feeds
  # This call returns every new feed added to the index over the past 24 hours in reverse chronological order.  Examples:    - https://api.podcastindex.org/api/1.0/recent/newfeeds?pretty   - https://api.podcastindex.org/api/1.0/recent/newfeeds?pretty&amp;since&#x3D;1613805000 
  # @param Int! max Maximum number of results to return. 
  # @param Int! since Return items since the specified time. The value can be a unix epoch timestamp or a negative integer that represents a number of seconds prior to right now. 
  # @param Boolean! pretty If present, makes the output “pretty” to help with debugging.  Parameter shall not have a value 
  # @return [InlineResponse20015]
  RecentNewfeeds(max: Int!, since: Int!, pretty: Boolean!): InlineResponse20015

  # Soundbites
  # This call returns the most recent &#x60;max&#x60; soundbites that the index has discovered.  A soundbite consists of an enclosure url, a start time and a duration. It is documented in the [podcast namespace](https://podcastindex.org/namespace/1.0#soundbite).  Example: https://api.podcastindex.org/api/1.0/recent/soundbites?pretty 
  # @param Int! max Maximum number of soundbites to return. 
  # @param Boolean! pretty If present, makes the output “pretty” to help with debugging.  Parameter shall not have a value 
  # @return [InlineResponse20016]
  RecentSoundbites(max: Int!, pretty: Boolean!): InlineResponse20016

  # Search Episodes by Person
  # This call returns all of the episodes where the specified person is mentioned.  Examples:    - https://api.podcastindex.org/api/1.0/search/byperson?q&#x3D;adam%20curry&amp;pretty   - https://api.podcastindex.org/api/1.0/search/byperson?q&#x3D;Martin+Mouritzen&amp;pretty   - https://api.podcastindex.org/api/1.0/search/byperson?q&#x3D;Klaus+Schwab&amp;pretty 
  # @param String! q Person search for 
  # @param Boolean! fulltext If present, return the full text value of any text fields (ex: &#x60;description&#x60;). If not provided, field value is truncated to 100 words.  Parameter shall not have a value 
  # @param Boolean! pretty If present, makes the output “pretty” to help with debugging.  Parameter shall not have a value 
  # @return [InlineResponse2001]
  SearchByperson(q: String!, fulltext: Boolean!, pretty: Boolean!): InlineResponse2001

  # Search Podcasts
  # This call returns all of the feeds that match the search terms in the &#x60;title&#x60;, &#x60;author&#x60; or &#x60;owner&#x60; of the feed.  This is ordered by the last-released episode, with the latest at the top of the results.  Example: https://api.podcastindex.org/api/1.0/search/byterm?q&#x3D;batman+university&amp;pretty 
  # @param String! q Terms to search for 
  # @param String! val Only returns feeds with a &#x60;value&#x60; block of the specified type. Use &#x60;any&#x60; to return feeds with any &#x60;value&#x60; block. 
  # @param Boolean! clean If present, only non-explicit feeds will be returned. Meaning, feeds where the &#x60;itunes:explicit&#x60; flag is set to &#x60;false&#x60;.  Parameter shall not have a value 
  # @param Boolean! fulltext If present, return the full text value of any text fields (ex: &#x60;description&#x60;). If not provided, field value is truncated to 100 words.  Parameter shall not have a value 
  # @param Boolean! pretty If present, makes the output “pretty” to help with debugging.  Parameter shall not have a value 
  # @return [InlineResponse200]
  SearchByterm(q: String!, val: String!, clean: Boolean!, fulltext: Boolean!, pretty: Boolean!): InlineResponse200

  # Current
  # Return the most recent index statistics.  Example: https://api.podcastindex.org/api/1.0/stats/current?pretty 
  # @param Boolean! pretty If present, makes the output “pretty” to help with debugging.  Parameter shall not have a value 
  # @return [InlineResponse20019]
  StatsCurrent(pretty: Boolean!): InlineResponse20019

  # By Feed ID
  # This call returns the information for supporting the podcast via one of the \&quot;Value for Value\&quot; methods from the PodcastIndex ID.  Examples:    - https://api.podcastindex.org/api/1.0/value/byfeedid?id&#x3D;920666&amp;pretty   - https://api.podcastindex.org/api/1.0/value/byfeedid?id&#x3D;779873&amp;pretty 
  # @param Int! Id_ The PodcastIndex Feed ID to search for. 
  # @param Boolean! pretty If present, makes the output “pretty” to help with debugging.  Parameter shall not have a value 
  # @return [InlineResponse20017]
  ValueByfeedid(Id_: Int!, pretty: Boolean!): InlineResponse20017

  # By Feed URL
  # This call returns the information for supporting the podcast via one of the \&quot;Value for Value\&quot; methods from feed URL.  Examples:    - https://api.podcastindex.org/api/1.0/value/byfeedurl?url&#x3D;https://mp3s.nashownotes.com/pc20rss.xml&amp;pretty   - https://api.podcastindex.org/api/1.0/value/byfeedurl?url&#x3D;https://lespoesiesdheloise.fr/@heloise/feed.xml&amp;pretty 
  # @param String! url Podcast feed URL 
  # @param Boolean! pretty If present, makes the output “pretty” to help with debugging.  Parameter shall not have a value 
  # @return [InlineResponse20018]
  ValueByfeedurl(url: String!, pretty: Boolean!): InlineResponse20018

}

